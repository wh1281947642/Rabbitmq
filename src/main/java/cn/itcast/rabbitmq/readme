1.simple:简单消息模型 ,一个消息只能被一个消费者消费
    Recv：自动进行消息确认，自动Ack
    Recv2:手动进行ACK
           channel.basicAck(envelope.getDeliveryTag(), false);手动Ack

2.work :工作队列 一个生产者，多个消费者，一个消息只能被一个消费者消费
        设置每个消费者同时只能处理一条消息
            channel.basicQos(1);
        处理速度快的可以多处理，能者多劳

3.发布与订阅：生产者发送消息给交换机，交换机在发送给队列，每个队列绑定自己的消费者

    Fanout:广播，将消息交给所有绑定到交换机队列
    Direct：定向（路由模式），将消息交给符合指定routing key的队列
    Topic：通配符，将消息交给符合routing pattern（路由模式）的队列

4.持久化

交换机持久化 ：
   声明exchange，指定类型为topic
   channel.exchangeDeclare(EXCHANGE_NAME, "topic",true);

队列持久化
   声明队列
   channel.queueDeclare(QUEUE_NAME, true, false, false, null);

消息持久化
   发送消息，并且指定routing key 为：insert ,代表新增商品
    channel.basicPublish(EXCHANGE_NAME, "item.insert", MessageProperties.PERSISTENT_TEXT_PLAIN, message.getBytes());